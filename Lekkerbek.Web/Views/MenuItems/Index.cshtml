@using Kendo.Mvc.UI;



@{
    ViewData["Title"] = "Index";
    Layout = "_Layout";
}
<h1>Menu</h1>
<p id="error_text" class="text-danger fw-bold"></p>

@(Html.Kendo().Grid<Lekkerbek.Web.Models.MenuItem>()
.Name("grid")
.ToolBar(tools =>
{
    tools.ClientTemplate("<div class='m-2 k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-toolbar-button  k-toolbar-tool'><a href='/MenuItems/Create'>Add New Menu Item</a></div>"); ;
})
.Columns(columns =>
{
    //columns.Bound(f => f.MenuItemId);
    columns.Bound(f => f.Name);
    columns.Bound(f => f.Description);
    columns.Bound(f => f.Price);
    columns.Bound(f => f.Sort);
    columns.Bound(f => f.BtwNumber).Title("BTW %");
        columns.Bound(p => p.MenuItemId)
.Title(" ").Filterable(false).ClientTemplate("<div class=' k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' ><a  href='/MenuItems/Edit/#=MenuItemId#'>Edit</a></div>");

    columns.Command(command =>
    {
        command.Destroy();
    });
})
.Editable(editable => editable.Mode(GridEditMode.PopUp))
.Filterable(filterable => filterable
    .Extra(false)
    .Operators(operators => operators
        .ForString(str => str.Clear()
.StartsWith("Starts with")
.IsEqualTo("Is equal to")
.IsNotEqualTo("Is not equal to")
       )
   )
    )
.DataSource(d =>
{
    d.Ajax()
    .Model(model =>
    {
        model.Id(product => product.MenuItemId); // Specify the property which is the unique identifier of the model.
        model.Field(product => product.MenuItemId).Editable(false); // Make the OrderID property not editable.
    })
    .Events(events => events.Error("error_handler"))
    .Create(create => create.Action("CreateMenuItem", "MenuItems")) // Action invoked when the user saves a new data item.
    .Read(read => read.Action("ReadMenuItems", "MenuItems"))  // Action invoked when the Grid needs data.
    .Update(update => update.Action("UpdateMenuItems", "MenuItems"))  // Action invoked when the user saves an updated data item.
    .Destroy(delete => delete.Action("DeleteMenuItem", "MenuItems")); // Action invoked when the user removes a data item.
})
    )

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var grid = $("#grid").data("kendoGrid");
            grid.cancelChanges();
            var message = " ";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += "- " + this + "\n";
                    });
                }
            });
            document.getElementById("error_text").innerText = message;
            //alert(message);
        }
    }

</script>
